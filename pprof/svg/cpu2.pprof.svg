<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="549" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="549" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.normalizeHeaderKey (1 samples, 7.14%)</title><rect x="768.6" y="325" width="84.3" height="15.0" fill="rgb(238,225,32)" rx="2" ry="2" />
<text text-anchor="" x="771.57" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.co..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/elliptic.p256Curve.CombinedMult (2 samples, 14.29%)</title><rect x="262.9" y="213" width="168.5" height="15.0" fill="rgb(216,204,24)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/elliptic.p256C..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/asn1.parseField (2 samples, 14.29%)</title><rect x="431.4" y="165" width="168.6" height="15.0" fill="rgb(228,115,13)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/asn1.parseFi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bufio.(*Writer).Flush (9 samples, 64.29%)</title><rect x="10.0" y="421" width="758.6" height="15.0" fill="rgb(243,24,15)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >bufio.(*Writer).Flush</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.checkSignature (2 samples, 14.29%)</title><rect x="262.9" y="245" width="168.5" height="15.0" fill="rgb(245,170,41)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.checkSign..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/asn1.parseField (2 samples, 14.29%)</title><rect x="431.4" y="101" width="168.6" height="15.0" fill="rgb(233,85,51)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/asn1.parseFi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/elliptic.p256PointDoubleAsm (1 samples, 7.14%)</title><rect x="347.1" y="149" width="84.3" height="15.0" fill="rgb(240,98,2)" rx="2" ry="2" />
<text text-anchor="" x="350.14" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/el..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.(*Certificate).CheckSignatureFrom (2 samples, 14.29%)</title><rect x="262.9" y="277" width="168.5" height="15.0" fill="rgb(238,175,8)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.(*Certifi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.notetsleep_internal (1 samples, 7.14%)</title><rect x="1105.7" y="469" width="84.3" height="15.0" fill="rgb(254,25,45)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.(*CertPool).AppendCertsFromPEM (2 samples, 14.29%)</title><rect x="431.4" y="245" width="168.6" height="15.0" fill="rgb(249,116,19)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.(*CertPoo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>reflect.Value.assignTo (1 samples, 7.14%)</title><rect x="431.4" y="53" width="84.3" height="15.0" fill="rgb(227,79,18)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >reflect.V..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.markBits.isMarked (1 samples, 7.14%)</title><rect x="937.1" y="421" width="84.3" height="15.0" fill="rgb(219,140,28)" rx="2" ry="2" />
<text text-anchor="" x="940.14" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/elliptic.initTable (2 samples, 14.29%)</title><rect x="262.9" y="165" width="168.5" height="15.0" fill="rgb(253,68,18)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/elliptic.initT..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/sha256.(*digest).Write (1 samples, 7.14%)</title><rect x="684.3" y="261" width="84.3" height="15.0" fill="rgb(235,43,34)" rx="2" ry="2" />
<text text-anchor="" x="687.29" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/sh..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>reflect.(*rtype).Field (1 samples, 7.14%)</title><rect x="515.7" y="85" width="84.3" height="15.0" fill="rgb(219,19,53)" rx="2" ry="2" />
<text text-anchor="" x="518.71" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >reflect.(..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vendor/golang_org/x/crypto/curve25519.scalarMult (1 samples, 7.14%)</title><rect x="10.0" y="293" width="84.3" height="15.0" fill="rgb(205,98,17)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vendor/go..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.parseCertificate (2 samples, 14.29%)</title><rect x="431.4" y="213" width="168.6" height="15.0" fill="rgb(227,144,16)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.parseCert..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (2 samples, 14.29%)</title><rect x="852.9" y="485" width="168.5" height="15.0" fill="rgb(231,71,11)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.systemstack</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*HostClient).do (10 samples, 71.43%)</title><rect x="10.0" y="453" width="842.9" height="15.0" fill="rgb(230,9,3)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.com/valyala/fasthttp.(*HostClient).do</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/sha256.(*digest).Sum (1 samples, 7.14%)</title><rect x="684.3" y="293" width="84.3" height="15.0" fill="rgb(236,38,4)" rx="2" ry="2" />
<text text-anchor="" x="687.29" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/sh..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/asn1.parseSequenceOf (2 samples, 14.29%)</title><rect x="431.4" y="117" width="168.6" height="15.0" fill="rgb(241,25,0)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/asn1.parseSe..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.schedule (1 samples, 7.14%)</title><rect x="1021.4" y="469" width="84.3" height="15.0" fill="rgb(224,221,0)" rx="2" ry="2" />
<text text-anchor="" x="1024.43" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/sha256.block (2 samples, 14.29%)</title><rect x="94.3" y="293" width="168.6" height="15.0" fill="rgb(227,173,29)" rx="2" ry="2" />
<text text-anchor="" x="97.29" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/sha256.block</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.findrunnable (1 samples, 7.14%)</title><rect x="1021.4" y="453" width="84.3" height="15.0" fill="rgb(233,16,5)" rx="2" ry="2" />
<text text-anchor="" x="1024.43" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.f..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.scanobject (1 samples, 7.14%)</title><rect x="937.1" y="437" width="84.3" height="15.0" fill="rgb(211,88,22)" rx="2" ry="2" />
<text text-anchor="" x="940.14" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*ResponseHeader).tryRead (1 samples, 7.14%)</title><rect x="768.6" y="389" width="84.3" height="15.0" fill="rgb(248,148,44)" rx="2" ry="2" />
<text text-anchor="" x="771.57" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.co..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*Conn).readRecord (1 samples, 7.14%)</title><rect x="600.0" y="309" width="84.3" height="15.0" fill="rgb(207,147,4)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*clientHandshakeState).doFullHandshake (7 samples, 50.00%)</title><rect x="10.0" y="341" width="590.0" height="15.0" fill="rgb(219,108,20)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tls.(*clientHandshakeState).doFullHandshake</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.park_m (1 samples, 7.14%)</title><rect x="1021.4" y="485" width="84.3" height="15.0" fill="rgb(244,116,14)" rx="2" ry="2" />
<text text-anchor="" x="1024.43" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.p..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.(*CertPool).findVerifiedParents (2 samples, 14.29%)</title><rect x="262.9" y="293" width="168.5" height="15.0" fill="rgb(250,120,26)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.(*CertPoo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/elliptic.(*p256Point).p256BaseMult (2 samples, 14.29%)</title><rect x="262.9" y="197" width="168.5" height="15.0" fill="rgb(209,218,1)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/elliptic.(*p25..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vendor/golang_org/x/crypto/curve25519.ladderstep (1 samples, 7.14%)</title><rect x="10.0" y="261" width="84.3" height="15.0" fill="rgb(242,214,46)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vendor/go..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*Conn).clientHandshake (9 samples, 64.29%)</title><rect x="10.0" y="373" width="758.6" height="15.0" fill="rgb(209,131,20)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tls.(*Conn).clientHandshake</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*Conn).Handshake (9 samples, 64.29%)</title><rect x="10.0" y="389" width="758.6" height="15.0" fill="rgb(239,153,20)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tls.(*Conn).Handshake</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*ResponseHeader).Read (1 samples, 7.14%)</title><rect x="768.6" y="405" width="84.3" height="15.0" fill="rgb(206,113,13)" rx="2" ry="2" />
<text text-anchor="" x="771.57" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.co..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>reflect.Value.Set (1 samples, 7.14%)</title><rect x="431.4" y="69" width="84.3" height="15.0" fill="rgb(221,172,41)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >reflect.V..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcDrain (2 samples, 14.29%)</title><rect x="852.9" y="453" width="168.5" height="15.0" fill="rgb(227,168,38)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.gcDrain</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.pollWork (1 samples, 7.14%)</title><rect x="852.9" y="437" width="84.2" height="15.0" fill="rgb(243,120,10)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.p..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*headerScanner).next (1 samples, 7.14%)</title><rect x="768.6" y="341" width="84.3" height="15.0" fill="rgb(217,28,11)" rx="2" ry="2" />
<text text-anchor="" x="771.57" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.co..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.notetsleepg (1 samples, 7.14%)</title><rect x="1105.7" y="485" width="84.3" height="15.0" fill="rgb(243,174,13)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*ResponseHeader).parse (1 samples, 7.14%)</title><rect x="768.6" y="373" width="84.3" height="15.0" fill="rgb(241,64,3)" rx="2" ry="2" />
<text text-anchor="" x="771.57" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.co..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net.(*conn).Read (1 samples, 7.14%)</title><rect x="600.0" y="277" width="84.3" height="15.0" fill="rgb(211,191,22)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net.(*con..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.(*Certificate).CheckSignature (2 samples, 14.29%)</title><rect x="262.9" y="261" width="168.5" height="15.0" fill="rgb(232,169,21)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.(*Certifi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/asn1.Unmarshal (2 samples, 14.29%)</title><rect x="431.4" y="197" width="168.6" height="15.0" fill="rgb(219,37,0)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/asn1.Unmarshal</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.finishedHash.Sum (1 samples, 7.14%)</title><rect x="684.3" y="309" width="84.3" height="15.0" fill="rgb(205,227,1)" rx="2" ry="2" />
<text text-anchor="" x="687.29" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*HostClient).Do (10 samples, 71.43%)</title><rect x="10.0" y="469" width="842.9" height="15.0" fill="rgb(248,105,20)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.com/valyala/fasthttp.(*HostClient).Do</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/asn1.parseField (2 samples, 14.29%)</title><rect x="431.4" y="133" width="168.6" height="15.0" fill="rgb(205,158,12)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/asn1.parseFi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/asn1.UnmarshalWithParams (2 samples, 14.29%)</title><rect x="431.4" y="181" width="168.6" height="15.0" fill="rgb(246,82,3)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/asn1.Unmarsh..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.timerproc (1 samples, 7.14%)</title><rect x="1105.7" y="501" width="84.3" height="15.0" fill="rgb(218,122,53)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.t..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vendor/golang_org/x/crypto/curve25519.ScalarMult (1 samples, 7.14%)</title><rect x="10.0" y="309" width="84.3" height="15.0" fill="rgb(242,159,6)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vendor/go..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/elliptic.p256Sqr (1 samples, 7.14%)</title><rect x="262.9" y="133" width="84.2" height="15.0" fill="rgb(209,82,16)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/el..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.initSystemRoots (2 samples, 14.29%)</title><rect x="431.4" y="277" width="168.6" height="15.0" fill="rgb(231,8,29)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.initSyste..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.systemRootsPool (2 samples, 14.29%)</title><rect x="431.4" y="309" width="168.6" height="15.0" fill="rgb(233,119,44)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.systemRoo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mcall (1 samples, 7.14%)</title><rect x="1021.4" y="501" width="84.3" height="15.0" fill="rgb(240,8,43)" rx="2" ry="2" />
<text text-anchor="" x="1024.43" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*block).readFromUntil (1 samples, 7.14%)</title><rect x="600.0" y="293" width="84.3" height="15.0" fill="rgb(238,105,35)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*ResponseHeader).parseHeaders (1 samples, 7.14%)</title><rect x="768.6" y="357" width="84.3" height="15.0" fill="rgb(240,191,13)" rx="2" ry="2" />
<text text-anchor="" x="771.57" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.co..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sync.(*Once).Do (2 samples, 14.29%)</title><rect x="262.9" y="181" width="168.5" height="15.0" fill="rgb(214,78,7)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sync.(*Once).Do</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vendor/golang_org/x/crypto/curve25519.mladder (1 samples, 7.14%)</title><rect x="10.0" y="277" width="84.3" height="15.0" fill="rgb(206,161,44)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vendor/go..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*HostClient).doNonNilReqResp (10 samples, 71.43%)</title><rect x="10.0" y="437" width="842.9" height="15.0" fill="rgb(234,213,25)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.com/valyala/fasthttp.(*HostClient).doNonNilReqResp</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.(*Certificate).buildChains (2 samples, 14.29%)</title><rect x="262.9" y="309" width="168.5" height="15.0" fill="rgb(229,83,42)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.(*Certifi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*Client).Do (10 samples, 71.43%)</title><rect x="10.0" y="485" width="842.9" height="15.0" fill="rgb(236,61,6)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.com/valyala/fasthttp.(*Client).Do</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*Conn).Write (9 samples, 64.29%)</title><rect x="10.0" y="405" width="758.6" height="15.0" fill="rgb(248,116,50)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tls.(*Conn).Write</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/elliptic.p256Inverse (1 samples, 7.14%)</title><rect x="262.9" y="149" width="84.2" height="15.0" fill="rgb(253,31,0)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/el..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>reflect.directlyAssignable (1 samples, 7.14%)</title><rect x="431.4" y="37" width="84.3" height="15.0" fill="rgb(209,89,24)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >reflect.d..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*clientHandshakeState).handshake (9 samples, 64.29%)</title><rect x="10.0" y="357" width="758.6" height="15.0" fill="rgb(211,67,16)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tls.(*clientHandshakeState).handshake</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcBgMarkWorker.func2 (2 samples, 14.29%)</title><rect x="852.9" y="469" width="168.5" height="15.0" fill="rgb(253,186,26)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.gcBgMarkWorke..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.loadSystemRoots (2 samples, 14.29%)</title><rect x="431.4" y="261" width="168.6" height="15.0" fill="rgb(244,164,18)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.loadSyste..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/ecdsa.Verify (2 samples, 14.29%)</title><rect x="262.9" y="229" width="168.5" height="15.0" fill="rgb(218,60,50)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/ecdsa.Verify</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*finishedHash).Write (2 samples, 14.29%)</title><rect x="94.3" y="325" width="168.6" height="15.0" fill="rgb(219,11,30)" rx="2" ry="2" />
<text text-anchor="" x="97.29" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tls.(*finished..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.nanotime (1 samples, 7.14%)</title><rect x="1021.4" y="437" width="84.3" height="15.0" fill="rgb(231,72,24)" rx="2" ry="2" />
<text text-anchor="" x="1024.43" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.netpoll (1 samples, 7.14%)</title><rect x="852.9" y="421" width="84.2" height="15.0" fill="rgb(251,135,25)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/sha256.(*digest).Write (2 samples, 14.29%)</title><rect x="94.3" y="309" width="168.6" height="15.0" fill="rgb(249,57,31)" rx="2" ry="2" />
<text text-anchor="" x="97.29" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/sha256.(*diges..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.futexsleep (1 samples, 7.14%)</title><rect x="1105.7" y="453" width="84.3" height="15.0" fill="rgb(218,22,31)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.f..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.futex (1 samples, 7.14%)</title><rect x="1105.7" y="437" width="84.3" height="15.0" fill="rgb(211,110,13)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.f..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/sha256.(*digest).checkSum (1 samples, 7.14%)</title><rect x="684.3" y="277" width="84.3" height="15.0" fill="rgb(210,132,20)" rx="2" ry="2" />
<text text-anchor="" x="687.29" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/sh..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/valyala/fasthttp.(*Response).ReadLimitBody (1 samples, 7.14%)</title><rect x="768.6" y="421" width="84.3" height="15.0" fill="rgb(249,5,11)" rx="2" ry="2" />
<text text-anchor="" x="771.57" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.co..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.epollwait (1 samples, 7.14%)</title><rect x="852.9" y="405" width="84.2" height="15.0" fill="rgb(209,225,12)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*clientHandshakeState).sendFinished (1 samples, 7.14%)</title><rect x="684.3" y="341" width="84.3" height="15.0" fill="rgb(254,110,20)" rx="2" ry="2" />
<text text-anchor="" x="687.29" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (14 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(207,105,24)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcBgMarkWorker (2 samples, 14.29%)</title><rect x="852.9" y="501" width="168.5" height="15.0" fill="rgb(233,4,34)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.gcBgMarkWorker</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.ParseCertificate (2 samples, 14.29%)</title><rect x="431.4" y="229" width="168.6" height="15.0" fill="rgb(207,178,29)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.ParseCert..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sync.(*Once).Do (2 samples, 14.29%)</title><rect x="431.4" y="293" width="168.6" height="15.0" fill="rgb(216,199,51)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sync.(*Once).Do</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.finishedHash.clientSum (1 samples, 7.14%)</title><rect x="684.3" y="325" width="84.3" height="15.0" fill="rgb(205,114,51)" rx="2" ry="2" />
<text text-anchor="" x="687.29" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/x509.(*Certificate).Verify (4 samples, 28.57%)</title><rect x="262.9" y="325" width="337.1" height="15.0" fill="rgb(226,57,13)" rx="2" ry="2" />
<text text-anchor="" x="265.86" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/x509.(*Certificate).Verify</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main.(*Crawler).Crawl (10 samples, 71.43%)</title><rect x="10.0" y="501" width="842.9" height="15.0" fill="rgb(234,202,32)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main.(*Crawler).Crawl</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/asn1.parseField (1 samples, 7.14%)</title><rect x="431.4" y="85" width="84.3" height="15.0" fill="rgb(253,207,10)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*Conn).readHandshake (1 samples, 7.14%)</title><rect x="600.0" y="325" width="84.3" height="15.0" fill="rgb(206,186,18)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*clientHandshakeState).readSessionTicket (1 samples, 7.14%)</title><rect x="600.0" y="341" width="84.3" height="15.0" fill="rgb(250,197,7)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/asn1.parseSequenceOf (2 samples, 14.29%)</title><rect x="431.4" y="149" width="168.6" height="15.0" fill="rgb(228,164,45)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/asn1.parseSe..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>crypto/tls.(*ecdheKeyAgreement).generateClientKeyExchange (1 samples, 7.14%)</title><rect x="10.0" y="325" width="84.3" height="15.0" fill="rgb(218,227,52)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >crypto/tl..</text>
</g>
</svg>
